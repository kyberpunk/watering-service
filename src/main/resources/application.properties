jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/db
jdbc.user=user
jdbc.pass=pass

hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
hibernate.hbm2ddl.auto=create-drop
server.error.include-stacktrace=ALWAYS
spring.thymeleaf.cache=false
spring.thymeleaf.cache.type=NONE

# Configuration for OAuth2 authentication
#watering.security=oauth2
#spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
#spring.security.oauth2.client.registration.keycloak.client-id=client-id
#spring.security.oauth2.client.registration.keycloak.client-secret=client-secret
#spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.redirect-uri=https://example.com/login/oauth2/code/keycloak
#spring.security.oauth2.client.provider.keycloak.authorization-uri=https://example.com/auth/realms/master/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.keycloak.token-uri=https://example.com/auth/realms/master/protocol/openid-connect/token
#spring.security.oauth2.client.provider.keycloak.user-info-uri=https://example.com/auth/realms/master/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.client.provider.keycloak.jwk-set-uri=https://example.com/auth/realms/master/protocol/openid-connect/certs
